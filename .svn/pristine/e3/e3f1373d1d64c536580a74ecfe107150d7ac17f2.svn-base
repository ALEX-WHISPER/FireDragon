{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\FireDragon\\GamePlay\\Game/assets\\scripts\\FireDragon\\GamePlay\\Game\\GameModel.js"],"names":["enemyBase","require","flags","cc","Class","extends","Component","editor","executionOrder","properties","catchActionInterval","curVoucherPoint","get","_curVoucherPoint","visible","curTreasure","_curTreasure","curMag","_curMag","magInterval","_magInterval","treasurePerPoint","_treasurePerPoint","QP_ID","_QP_ID","bindingAccount","_bindingAccount","enemies","default","type","curEnemyIndex","totalCardinal","onLoad","gameValuesInit","start","selection_sort","i","length","console","log","enemyName","cardinalNum","spawningRate","startHangingUp","schedule","onStartSpawning","pauseHangingUp","unschedule","enemySpawner","enemyCatcher","calcSpawningRate","random0To1","calcCatchingRate","Math","random","enemyCatchingRate","catchingRate","NOTIFICATION","emit","ENEMY_GET_CAUGHT","msg","ENEMY_GET_ESCAPED","ENEMY_CATCH_ATTEMPT","setNewTreasure","newTreasure","setNewMag","newMag","setNewMagInterval","newMagInterval","setNewVoucherPoint","newVoucherPoint","minCardinal","minIndex","j","temp"],"mappings":"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","file":"GameModel.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\FireDragon\\GamePlay\\Game","sourcesContent":["var enemyBase = require(\"EnemyBase\");\r\nvar flags = require(\"GameFlags\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        executionOrder: -2\r\n    },\r\n\r\n    properties: () => ({\r\n        catchActionInterval: 2,\r\n\r\n        //#region Data\r\n        curVoucherPoint: {\r\n            get: function() {return this._curVoucherPoint;},\r\n            visible: false\r\n        },\r\n\r\n        curTreasure: {\r\n            get: function() { return this._curTreasure;},\r\n            visible: false\r\n        },\r\n\r\n        curMag: {\r\n            get: function() {return this._curMag;},\r\n            visible: false\r\n        },\r\n\r\n        magInterval: {\r\n            get: function() {return this._magInterval;},\r\n            visible: false\r\n        },\r\n\r\n        treasurePerPoint: {\r\n            get: function() {return this._treasurePerPoint;},\r\n            visible: false\r\n        },\r\n\r\n        QP_ID: {\r\n            get: function() {return this._QP_ID;},\r\n            visible: false\r\n        },\r\n\r\n        bindingAccount: {\r\n            get: function() {return this._bindingAccount;},\r\n            visible: false\r\n        },\r\n        //#endregion\r\n        \r\n        enemies: {\r\n            default: [],\r\n            type: [enemyBase]\r\n        },\r\n\r\n        curEnemyIndex: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n\r\n        totalCardinal: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n    }),\r\n\r\n    onLoad: function() {\r\n        this.gameValuesInit();\r\n    },\r\n\r\n    start: function() {\r\n        this.selection_sort();  //  after sorting, the enemy array has been sorted ascendingly basic on cardinalNum\r\n\r\n        for(let i = 0; i < this.enemies.length; i++) {\r\n            console.log(this.enemies[i].enemyName + \": \" + this.enemies[i].cardinalNum);\r\n        }\r\n\r\n        //  calc the total cardinal number, to confirm the spawning rate of each enemy\r\n        for (let i = 0; i < this.enemies.length; i++) {\r\n            this.totalCardinal += this.enemies[i].cardinalNum;\r\n        }\r\n\r\n        //  calc the spawning rate of each enemy\r\n        for (let i = 0; i < this.enemies.length; i++) {\r\n            this.enemies[i].spawningRate = this.enemies[i].cardinalNum / this.totalCardinal;\r\n            if (i > 0) this.enemies[i].spawningRate += this.enemies[i - 1].spawningRate;\r\n            console.log(this.enemies[i].enemyName + \"'s spawningRange: \" + this.enemies[i].spawningRate);\r\n        }\r\n    },\r\n\r\n    startHangingUp: function() {\r\n        this.schedule(this.onStartSpawning, this.catchActionInterval);\r\n    },\r\n\r\n    pauseHangingUp: function() {\r\n        this.unschedule(this.onStartSpawning, this);\r\n    },\r\n\r\n    onStartSpawning: function() {\r\n        this.enemySpawner();\r\n        this.enemyCatcher();\r\n    },\r\n\r\n    enemySpawner: function() {\r\n        let calcSpawningRate = cc.random0To1();\r\n        for(let i = 0; i < this.enemies.length; i++) {\r\n            if (calcSpawningRate <= this.enemies[i].spawningRate) {\r\n                this.curEnemyIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        // this.curEnemyIndex = Math.floor(Math.random() * this.enemies.length);\r\n        console.log(\"CalcSpawningNum: \" + calcSpawningRate + \", spawned enemy: \" + this.enemies[this.curEnemyIndex].enemyName);\r\n    },\r\n\r\n    enemyCatcher: function() {\r\n        //  randomize a num as the catching rate\r\n        var calcCatchingRate = Math.random();\r\n        var enemyCatchingRate = this.enemies[this.curEnemyIndex].catchingRate;\r\n        console.log(\"CalcCatchingRate: \" + calcCatchingRate + \", RealCatchingRate: \" + enemyCatchingRate);\r\n\r\n        if (calcCatchingRate <= enemyCatchingRate) {\r\n            //  enemy get caught\r\n            NOTIFICATION.emit(flags.ENEMY_GET_CAUGHT, {msg: this.enemies[this.curEnemyIndex].enemyName});\r\n        } else {\r\n            //  enemy get escaped\r\n            NOTIFICATION.emit(flags.ENEMY_GET_ESCAPED, {msg: this.enemies[this.curEnemyIndex].enemyName});\r\n        }\r\n\r\n        NOTIFICATION.emit(flags.ENEMY_CATCH_ATTEMPT, {msg: this.enemies[this.curEnemyIndex].enemyName});\r\n    },\r\n\r\n    setNewTreasure: function(newTreasure) {\r\n        if (this.curTreasure != newTreasure) {\r\n            this._curTreasure = newTreasure;\r\n            console.log(\"update treasure: \" + newTreasure);            \r\n        }\r\n    },\r\n\r\n    setNewMag: function(newMag) {\r\n        if(this.curMag != newMag)\r\n            this._curMag = newMag;\r\n    },\r\n\r\n    setNewMagInterval: function(newMagInterval) {\r\n        if(this.magInterval != newMagInterval)    \r\n            this._magInterval = newMagInterval;\r\n    },\r\n\r\n    setNewVoucherPoint: function(newVoucherPoint) {\r\n        if(this.curVoucherPoint != newVoucherPoint) {\r\n            this._curVoucherPoint = newVoucherPoint;\r\n            console.log(\"update voucher point: \" + newVoucherPoint);            \r\n        }\r\n    },\r\n\r\n    selection_sort: function() {\r\n        for (let i = 0; i < this.enemies.length; i++) {\r\n            let minCardinal = this.enemies[i].cardinalNum;\r\n            let minIndex = i;\r\n\r\n            for (let j = i; j < this.enemies.length; j++) {\r\n                if (this.enemies[j].cardinalNum < minCardinal) {\r\n                    minCardinal = this.enemies[j].cardinalNum;\r\n                    minIndex = j;\r\n                }\r\n            }\r\n\r\n            if (minIndex != i) {\r\n                let temp = this.enemies[minIndex];\r\n                this.enemies[minIndex] = this.enemies[i];\r\n                this.enemies[i] = temp;\r\n            }\r\n        }\r\n    },\r\n\r\n    //  FOR DEVELOPER TESTING\r\n    gameValuesInit: function() {\r\n        this._curVoucherPoint = 50;\r\n        this._curTreasure = 99;\r\n        this._curMag = 1;\r\n        this._magInterval = 1;\r\n        this._treasurePerPoint = 2000;\r\n        this._QP_ID = '233333333';\r\n        this._bindingAccount = '00544-44944'\r\n    }\r\n});\r\n"]}