{"version":3,"sources":["MallView.js"],"names":["voucherItemSetting","require","cc","Class","extends","Component","properties","confirmingPanle","default","type","Node","lackOfVoucherPanel","label_CurTreasure_Purchase","Label","toggle_AutoRedeem_Purchase","Toggle","label_RedeemedAmount","label_SliderMaxAmount","label_CurTreasure_Redeem","label_CashableTreasure_Redeem","label_Rule","slider_ChooseRedeemAmount","Slider","hasInited_Purchase","visible","hasInited_Redeem","init_PurchaseBlock","initValueSet","curTreasureAmount","isAutoRedeem","string","isChecked","init_RedeemBlock","curVoucherPointAmount","treasurePerPoint","cashableTreasure","replace","progress","redeemAmount","activateLackOfVoucherPanel","active","deactivateLackOfVoucherPanel","activateConfirmPanel","deactivateConfirmPanel","updateRedeemAmount","tarRedeemAmount"],"mappings":";;;;;;AAAA,IAAIA,qBAAqBC,QAAQ,gBAAR,CAAzB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,yBAAiB;AACbC,qBAAS,IADI;AAEbC,kBAAMP,GAAGQ;AAFI,SADT;;AAMRC,4BAAoB;AAChBH,qBAAS,IADO;AAEhBC,kBAAMP,GAAGQ;AAFO,SANZ;;AAWR;AACAE,oCAA4B;AACxBJ,qBAAS,IADe;AAExBC,kBAAMP,GAAGW;AAFe,SAZpB;;AAiBRC,oCAA4B;AACxBN,qBAAS,IADe;AAExBC,kBAAMP,GAAGa;AAFe,SAjBpB;AAqBR;;AAEA;AACAC,8BAAsB;AAClBR,qBAAS,IADS;AAElBC,kBAAKP,GAAGW;AAFU,SAxBd;;AA6BRI,+BAAuB;AACnBT,qBAAS,IADU;AAEnBC,kBAAKP,GAAGW;AAFW,SA7Bf;;AAkCRK,kCAA0B;AACtBV,qBAAS,IADa;AAEtBC,kBAAKP,GAAGW;AAFc,SAlClB;;AAuCRM,uCAA+B;AAC3BX,qBAAS,IADkB;AAE3BC,kBAAMP,GAAGW;AAFkB,SAvCvB;;AA4CRO,oBAAY;AACRZ,qBAAS,IADD;AAERC,kBAAMP,GAAGW;AAFD,SA5CJ;;AAiDRQ,mCAA2B;AACvBb,qBAAS,IADc;AAEvBC,kBAAMP,GAAGoB;AAFc,SAjDnB;AAqDR;;AAEAC,4BAAoB;AAChBf,qBAAS,KADO;AAEhBgB,qBAAS;AAFO,SAvDZ;AA2DRC,0BAAkB;AACdjB,qBAAS,KADK;AAEdgB,qBAAS;AAFK;AA3DV,KAHP;;AAoEL;AACAE,wBAAoB,4BAASC,YAAT,EAAuB;AACvC,YAAIC,oBAAoBD,aAAaC,iBAArC;AACA,YAAIC,eAAeF,aAAaE,YAAhC;;AAEA,aAAKjB,0BAAL,CAAgCkB,MAAhC,GAAyCF,iBAAzC;AACA,aAAKd,0BAAL,CAAgCiB,SAAhC,GAA4C,KAAKR,kBAAL,GAA0B,KAAKT,0BAAL,CAAgCiB,SAA1D,GAAsEF,YAAlH;;AAEA,aAAKD,iBAAL,GAAyBA,iBAAzB;AACA,aAAKL,kBAAL,GAA0B,IAA1B;AACH,KA9EI;;AAgFL;AACAS,sBAAkB,0BAASL,YAAT,EAAuB;AACrC,YAAIC,oBAAoBD,aAAaC,iBAArC;AACA,YAAIK,wBAAwBN,aAAaM,qBAAzC;AACA,YAAIC,mBAAmBP,aAAaO,gBAApC;AACA,YAAIC,mBAAmBF,wBAAwBC,gBAA/C;;AAEA,aAAKhB,wBAAL,CAA8BY,MAA9B,GAAuC,KAAKZ,wBAAL,CAA8BY,MAA9B,CAAqCM,OAArC,CAA6C,KAAKX,gBAAL,GAAwB,KAAKG,iBAA7B,GAAgD,OAA7F,EAAsGA,iBAAtG,CAAvC;AACA,aAAKZ,oBAAL,CAA0Bc,MAA1B,GAAmCG,qBAAnC;;AAEA,aAAKhB,qBAAL,CAA2Ba,MAA3B,GAAoC,KAAKb,qBAAL,CAA2Ba,MAA3B,CAAkCM,OAAlC,CAA0C,KAAKX,gBAAL,GAAwB,KAAKQ,qBAA7B,GAAqD,OAA/F,EAAwGA,qBAAxG,CAApC;AACA,aAAKb,UAAL,CAAgBU,MAAhB,GAAyB,KAAKV,UAAL,CAAgBU,MAAhB,CAAuBM,OAAvB,CAA+B,KAAKX,gBAAL,GAAwB,KAAKS,gBAA7B,GAAgD,OAA/E,EAAwFA,gBAAxF,CAAzB;AACA,aAAKf,6BAAL,CAAmCW,MAAnC,GAA4CK,gBAA5C;AACA,aAAKd,yBAAL,CAA+BgB,QAA/B,GAA0C,CAA1C;;AAEA,aAAKT,iBAAL,GAAyBA,iBAAzB;AACA,aAAKK,qBAAL,GAA6BA,qBAA7B;AACA,aAAKK,YAAL,GAAoBL,qBAApB;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;;AAEA,aAAKV,gBAAL,GAAwB,IAAxB;AACH,KAtGI;;AAwGL;AACAc,gCAA4B,sCAAW;AACnC,YAAI,KAAK5B,kBAAL,CAAwB6B,MAAxB,KAAmC,KAAvC,EAA8C;AAC1C,iBAAK7B,kBAAL,CAAwB6B,MAAxB,GAAiC,IAAjC;AACH;AACJ,KA7GI;;AA+GL;AACAC,kCAA8B,wCAAW;AACrC,YAAI,KAAK9B,kBAAL,CAAwB6B,MAAxB,KAAmC,IAAvC,EAA6C;AACzC,iBAAK7B,kBAAL,CAAwB6B,MAAxB,GAAiC,KAAjC;AACH;AACJ,KApHI;;AAsHL;AACAE,0BAAsB,gCAAW;AAC7B,YAAI,KAAKnC,eAAL,CAAqBiC,MAArB,KAAgC,KAApC,EAA2C;AACvC,iBAAKjC,eAAL,CAAqBiC,MAArB,GAA8B,IAA9B;AACH;AACJ,KA3HI;;AA6HL;AACAG,4BAAwB,kCAAW;AAC/B,YAAI,KAAKpC,eAAL,CAAqBiC,MAArB,KAAgC,IAApC,EAA0C;AACtC,iBAAKjC,eAAL,CAAqBiC,MAArB,GAA8B,KAA9B;AACH;AACJ,KAlII;;AAoIL;AACAI,wBAAoB,4BAASC,eAAT,EAA0B;AAC1C,aAAK7B,oBAAL,CAA0Bc,MAA1B,GAAmCe,eAAnC;AACA,aAAK1B,6BAAL,CAAmCW,MAAnC,GAA4Ce,kBAAkB,KAAKX,gBAAnE;AACH;AACD;AAzIK,CAAT","file":"MallView.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\FireDragon\\Mall","sourcesContent":["var voucherItemSetting = require(\"VoucherManager\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        confirmingPanle: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        \r\n        lackOfVoucherPanel: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        //#region  Purchase UI elems\r\n        label_CurTreasure_Purchase: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        toggle_AutoRedeem_Purchase: {\r\n            default: null,\r\n            type: cc.Toggle\r\n        },\r\n        //#endregion\r\n\r\n        //#region  Redeem UI elems\r\n        label_RedeemedAmount: {\r\n            default: null,\r\n            type:cc.Label\r\n        },\r\n\r\n        label_SliderMaxAmount: {\r\n            default: null,\r\n            type:cc.Label\r\n        },\r\n\r\n        label_CurTreasure_Redeem: {\r\n            default: null,\r\n            type:cc.Label\r\n        },\r\n\r\n        label_CashableTreasure_Redeem: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        label_Rule: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\r\n        slider_ChooseRedeemAmount: {\r\n            default: null,\r\n            type: cc.Slider\r\n        },\r\n        //#endregion\r\n\r\n        hasInited_Purchase: {\r\n            default: false,\r\n            visible: false\r\n        },\r\n        hasInited_Redeem: {\r\n            default: false,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n    //  init/update UI content in purchase block\r\n    init_PurchaseBlock: function(initValueSet) {\r\n        let curTreasureAmount = initValueSet.curTreasureAmount;\r\n        let isAutoRedeem = initValueSet.isAutoRedeem;\r\n\r\n        this.label_CurTreasure_Purchase.string = curTreasureAmount;\r\n        this.toggle_AutoRedeem_Purchase.isChecked = this.hasInited_Purchase ? this.toggle_AutoRedeem_Purchase.isChecked : isAutoRedeem;\r\n        \r\n        this.curTreasureAmount = curTreasureAmount;\r\n        this.hasInited_Purchase = true;\r\n    },\r\n\r\n    //  init/update UI content in redeem block\r\n    init_RedeemBlock: function(initValueSet) {\r\n        let curTreasureAmount = initValueSet.curTreasureAmount;\r\n        let curVoucherPointAmount = initValueSet.curVoucherPointAmount;\r\n        let treasurePerPoint = initValueSet.treasurePerPoint;\r\n        let cashableTreasure = curVoucherPointAmount * treasurePerPoint;\r\n\r\n        this.label_CurTreasure_Redeem.string = this.label_CurTreasure_Redeem.string.replace(this.hasInited_Redeem ? this.curTreasureAmount :'value', curTreasureAmount);\r\n        this.label_RedeemedAmount.string = curVoucherPointAmount;\r\n        \r\n        this.label_SliderMaxAmount.string = this.label_SliderMaxAmount.string.replace(this.hasInited_Redeem ? this.curVoucherPointAmount : 'value', curVoucherPointAmount);\r\n        this.label_Rule.string = this.label_Rule.string.replace(this.hasInited_Redeem ? this.treasurePerPoint : 'value', treasurePerPoint);\r\n        this.label_CashableTreasure_Redeem.string = cashableTreasure;\r\n        this.slider_ChooseRedeemAmount.progress = 1;\r\n\r\n        this.curTreasureAmount = curTreasureAmount;\r\n        this.curVoucherPointAmount = curVoucherPointAmount;\r\n        this.redeemAmount = curVoucherPointAmount;\r\n        this.treasurePerPoint = treasurePerPoint;\r\n        this.cashableTreasure = cashableTreasure;\r\n        \r\n        this.hasInited_Redeem = true;        \r\n    },\r\n\r\n    //  hint panel when user has no voucher point\r\n    activateLackOfVoucherPanel: function() {\r\n        if (this.lackOfVoucherPanel.active === false) {\r\n            this.lackOfVoucherPanel.active = true;\r\n        }\r\n    },\r\n\r\n    //  close the lackOfVoucher hint panel\r\n    deactivateLackOfVoucherPanel: function() {\r\n        if (this.lackOfVoucherPanel.active === true) {\r\n            this.lackOfVoucherPanel.active = false;\r\n        }\r\n    },\r\n\r\n    //  open the confirm panel of voucher purchasing\r\n    activateConfirmPanel: function() {\r\n        if (this.confirmingPanle.active === false) {\r\n            this.confirmingPanle.active = true;\r\n        }\r\n    },\r\n\r\n    //  close the confirm panel of voucher purchasing\r\n    deactivateConfirmPanel: function() {\r\n        if (this.confirmingPanle.active === true) {\r\n            this.confirmingPanle.active = false;\r\n        }\r\n    },\r\n\r\n    //#region   for slider: update redeemed amount and slider length on user sliding\r\n    updateRedeemAmount: function(tarRedeemAmount) {\r\n        this.label_RedeemedAmount.string = tarRedeemAmount;\r\n        this.label_CashableTreasure_Redeem.string = tarRedeemAmount * this.treasurePerPoint;\r\n    },\r\n    //#endregion\r\n});\r\n"]}