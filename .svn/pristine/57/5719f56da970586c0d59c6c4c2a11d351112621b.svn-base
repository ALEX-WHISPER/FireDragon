(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/scripts/PerpleMonster/Star.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, '49b08egfLNBCIBqEe2X+6lg', 'Star', __filename);
// scripts/Star.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {
        pickRadius: 0,

        game: {
            default: null,
            serializable: false
        }
    },

    //  get the distance between star and player
    getPlayerDistance: function getPlayerDistance() {
        return cc.pDistance(this.node.position, this.game.player.getPosition());
    },

    //  get called when the distance is close enough
    onPickedup: function onPickedup() {
        this.game.starSpawner(); //  instantiate a new star
        this.game.gainScore();
        this.node.destroy();
    },

    //  detect the distance every frame
    update: function update() {
        if (this.getPlayerDistance() < this.pickRadius) {
            this.onPickedup(); //  pick this star
            return;
        }

        var opacityRatio = 1 - this.game.elapsedTime / this.game.starLifeTime;
        var minOpacity = 50;
        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));
    }
});

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=Star.js.map
        