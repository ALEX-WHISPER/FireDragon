{"version":3,"sources":["xxtea.js"],"names":["delta","toUint8Array","v","includeLength","length","n","m","bytes","Uint8Array","i","toUint32Array","Uint32Array","mx","sum","y","z","p","e","k","fixk","key","set","encryptUint32Array","q","Math","floor","decryptUint32Array","stringToBytes","str","codeUnit","charCodeAt","nextCodeUnit","rune","cc","error","subarray","toShortString","charCodes","Uint16Array","off","len","unit","toString","String","fromCharCode","apply","toLongString","buf","size","push","join","encrypt","data","undefined","encryptToString","decrypt","Buffer","decryptToString","module","exports"],"mappings":"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","file":"xxtea.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\FireDragon\\net","sourcesContent":["var delta = 0x9E3779B9;\n\nfunction toUint8Array(v, includeLength) {\n    var length = v.length;\n    var n = length << 2;\n    if (includeLength) {\n        var m = v[length - 1];\n        n -= 4;\n        if ((m < n - 3) || (m > n)) {\n            return null;\n        }\n        n = m;\n    }\n    var bytes = new Uint8Array(n);\n    for (var i = 0; i < n; ++i) {\n        bytes[i] = v[i >> 2] >> ((i & 3) << 3);\n    }\n    return bytes;\n}\n\nfunction toUint32Array(bytes, includeLength) {\n    var length = bytes.length;\n    var n = length >> 2;\n    if ((length & 3) !== 0) {\n        ++n;\n    }\n    var v;\n    if (includeLength) {\n        v = new Uint32Array(n + 1);\n        v[n] = length;\n    }\n    else {\n        v = new Uint32Array(n);\n    }\n    for (var i = 0; i < length; ++i) {\n        v[i >> 2] |= bytes[i] << ((i & 3) << 3);\n    }\n    return v;\n}\n\nfunction mx(sum, y, z, p, e, k) {\n    return ((z >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4)) ^ ((sum ^ y) + (k[p & 3 ^ e] ^ z));\n}\n\nfunction fixk(k) {\n    if (k.length < 16) {\n        var key = new Uint8Array(16);\n        key.set(k);\n        k = key;\n    }\n    return k;\n}\n\nfunction encryptUint32Array(v, k) {\n    var length = v.length;\n    var n = length - 1;\n    var y, z, sum, e, p, q;\n    z = v[n];\n    sum = 0;\n    for (q = Math.floor(6 + 52/length) | 0; q > 0; --q) {\n        sum += delta;\n        e = sum >>> 2 & 3;\n        for (p = 0; p < n; ++p) {\n            y = v[p + 1];\n            z = v[p] += mx(sum, y, z, p, e, k);\n        }\n        y = v[0];\n        z = v[n] += mx(sum, y, z, p, e, k);\n    }\n    return v;\n}\n\nfunction decryptUint32Array(v, k) {\n    var length = v.length;\n    var n = length - 1;\n    var y, z, sum, e, p, q;\n    y = v[0];\n    q = Math.floor(6 + 52/length);\n    for (sum = q * delta; sum !== 0; sum -= delta) {\n        e = sum >>> 2 & 3;\n        for (p = n; p > 0; --p) {\n            z = v[p - 1];\n            y = v[p] -= mx(sum, y, z, p, e, k);\n        }\n        z = v[n];\n        y = v[0] -= mx(sum, y, z, p, e, k);\n    }\n    return v;\n}\n\nfunction stringToBytes(str) {\n    var n = str.length;\n    // A single code unit uses at most 3 bytes.\n    // Two code units at most 4.\n    var bytes = new Uint8Array(n * 3);\n    var length = 0;\n    for (var i = 0; i < n; i++) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit < 0x80) {\n            bytes[length++] = codeUnit;\n        }\n        else if (codeUnit < 0x800) {\n            bytes[length++] = 0xC0 | (codeUnit >> 6);\n            bytes[length++] = 0x80 | (codeUnit & 0x3F);\n        }\n        else if (codeUnit < 0xD800 || codeUnit > 0xDFFF) {\n            bytes[length++] = 0xE0 | (codeUnit >> 12);\n            bytes[length++] = 0x80 | ((codeUnit >> 6) & 0x3F);\n            bytes[length++] = 0x80 | (codeUnit & 0x3F);\n        }\n        else {\n            if (i + 1 < n) {\n                var nextCodeUnit = str.charCodeAt(i + 1);\n                if (codeUnit < 0xDC00 && 0xDC00 <= nextCodeUnit && nextCodeUnit <= 0xDFFF) {\n                    var rune = (((codeUnit & 0x03FF) << 10) | (nextCodeUnit & 0x03FF)) + 0x010000;\n                    bytes[length++] = 0xF0 | (rune >> 18);\n                    bytes[length++] = 0x80 | ((rune >> 12) & 0x3F);\n                    bytes[length++] = 0x80 | ((rune >> 6) & 0x3F);\n                    bytes[length++] = 0x80 | (rune & 0x3F);\n                    i++;\n                    continue; \n                }\n            }\n            cc.error('Malformed string');\n        }\n    }\n    return bytes.subarray(0, length);\n}\n\nfunction toShortString(bytes, n) {\n    var charCodes = new Uint16Array(n);\n    var i = 0, off = 0;\n    for (var len = bytes.length; i < n && off < len; i++) {\n        var unit = bytes[off++];\n        switch (unit >> 4) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n            charCodes[i] = unit;\n            break;\n        case 12:\n        case 13:\n            if (off < len) {\n                charCodes[i] = ((unit & 0x1F) << 6) |\n                                (bytes[off++] & 0x3F);\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        case 14:\n            if (off + 1 < len) {\n                charCodes[i] = ((unit & 0x0F) << 12) |\n                               ((bytes[off++] & 0x3F) << 6) |\n                               (bytes[off++] & 0x3F);\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        case 15:\n            if (off + 2 < len) {\n                var rune = (((unit & 0x07) << 18) |\n                            ((bytes[off++] & 0x3F) << 12) |\n                            ((bytes[off++] & 0x3F) << 6) |\n                            (bytes[off++] & 0x3F)) - 0x10000;\n                if (0 <= rune && rune <= 0xFFFFF) {\n                    charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                    charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                }\n                else {\n                    cc.error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                }\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        default:\n            cc.error('Bad UTF-8 encoding 0x' + unit.toString(16));\n        }\n    }\n    if (i < n) {\n        charCodes = charCodes.subarray(0, i);\n    }\n    return String.fromCharCode.apply(String, charCodes);\n}\n\nfunction toLongString(bytes, n) {\n    var buf = [];\n    var charCodes = new Uint16Array(0x8000);\n    var i = 0, off = 0;\n    for (var len = bytes.length; i < n && off < len; i++) {\n        var unit = bytes[off++];\n        switch (unit >> 4) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n            charCodes[i] = unit;\n            break;\n        case 12:\n        case 13:\n            if (off < len) {\n                charCodes[i] = ((unit & 0x1F) << 6) |\n                                (bytes[off++] & 0x3F);\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        case 14:\n            if (off + 1 < len) {\n                charCodes[i] = ((unit & 0x0F) << 12) |\n                               ((bytes[off++] & 0x3F) << 6) |\n                               (bytes[off++] & 0x3F);\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        case 15:\n            if (off + 2 < len) {\n                var rune = (((unit & 0x07) << 18) |\n                            ((bytes[off++] & 0x3F) << 12) |\n                            ((bytes[off++] & 0x3F) << 6) |\n                            (bytes[off++] & 0x3F)) - 0x10000;\n                if (0 <= rune && rune <= 0xFFFFF) {\n                    charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                    charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                }\n                else {\n                    cc.error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                }\n            }\n            else {\n                cc.error('Unfinished UTF-8 octet sequence');\n            }\n            break;\n        default:\n            cc.error('Bad UTF-8 encoding 0x' + unit.toString(16));\n        }\n        if (i >= 0x7FFF - 1) {\n            var size = i + 1;\n            buf.push(String.fromCharCode.apply(String, charCodes.subarray(0, size)));\n            n -= size;\n            i = -1;\n        }\n    }\n    if (i > 0) {\n        buf.push(String.fromCharCode.apply(String, charCodes.subarray(0, i)));\n    }\n    return buf.join('');\n}\n\nfunction toString(bytes) {\n    var n = bytes.length;\n    if (n === 0) return '';\n    return ((n < 0xFFFF) ?\n            toShortString(bytes, n) :\n            toLongString(bytes, n));\n}\n\nfunction encrypt(data, key) {\n    if (typeof data === 'string') data = stringToBytes(data);\n    if (typeof key === 'string') key = stringToBytes(key);\n    if (data === undefined || data === null || data.length === 0) {\n        return data;\n    }\n    return toUint8Array(encryptUint32Array(toUint32Array(data, true), toUint32Array(fixk(key), false)), false);\n}\n\nfunction encryptToString(data, key) {\n    // return new Buffer(encrypt(data, key)).toString('base64');\n      return encrypt(data, key);\n}\n\nfunction decrypt(data, key) {\n    if (typeof data === 'string') data = new Buffer(data, 'base64');\n    if (typeof key === 'string') key = stringToBytes(key);\n    if (data === undefined || data === null || data.length === 0) {\n        return data;\n    }\n    return toUint8Array(decryptUint32Array(toUint32Array(data, false), toUint32Array(fixk(key), false)), true);\n}\n\nfunction decryptToString(data, key) {\n    return toString(decrypt(data, key));\n}\n\n// function intTObyte4(num){\n//     num=parseInt(num);\n//     let bytel=new Uint8Array(8);\n//     let j=0xf;\n//     let z=4;\n//     for(let i=0;i<8;i++){\n//         let y=j << z * i;\n//         let x=num & y;\n//         x = x >> (z * i);\n//         bytel[i] = stringToBytes(x);\n//     }\n//     return bytel;\n// }\n\nmodule.exports = {\n    decryptToString:decryptToString,\n    stringToBytes:stringToBytes,\n    // intTObyte4:intTObyte4,\n    // toString:toString,\n    // encrypt:encrypt,\n    encryptToString:encryptToString,\n    // decrypt:decrypt \n} "]}